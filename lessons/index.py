# индекс это порядковый номер каждого элемента в массиве, начинается слева на право от нуля до последнего элемента,
# либо с обратной стороны с -1 шагом
# индексы в питоне есть у str, tuple, list

# все массивы питона str""(строка), tuple()(кортеж), list[](список), set{}(множество),
# frozenset(неизменяемое множество), dict {"key": 1, "key_1": 2}(словарь)

# в списке могут быть другие массивы, к которым мы получаем доступ ЦЕПОЧКОЙ через индексы
# home = [1, 2, 3, "Gleb", (5, [1,2,3], 6), "abv"]
# print(home[1], home[3], home[-2][-2][-1])

# достали единицу из 6 вложенных списков
# mouse = [[[[[[1]]]]]]
# print(mouse[0][0][0][0][0][0])

# список объект изменяемый, мы его можем изменять, а кортеж это неизменяемый тип он нам даст ошибку
# a = [1, 2, 3]
# a[0] = 4
# print(a)

# строки НЕИЗМЕНЯЕМЫЙ тип, в нем мы не можем ничего изменять
# string = "Glep"
# string[-1] = "b"
# print(string)

# добавили новые пару - ключ значений
# a = {"key": 1, "key_1": 2, "key_3": 4}
# a["key_3"] = 5
# a["key_4"] = 6
# print(a)



# type  - функция которая выводит тип данных объекта (тайп принимает только один аргумент, любой)
# a = 1.5
# print(type(a))

# len - функция которая выводит длинну объкта не по индексу а по кол-ву объктов в массиве,
# так же принимает только один аргумент, который обязательно должен быть массивом
# a = (1, 2, 3)
# print(len(a))

# min, max - максимальное и минимальное значение любого массива, в массиве должны быть
# элементы которые мы можем сравнивать с самим собой
# a = ["(((((omeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee", "(1, 3)", "{1, 2, 3}"]
# print(min(a), max(a))

# знаки сравнения (>, <, ==, >=, <=, !=)
# a = "123"
# b = "123"
# print(a >= b)

# a = [2]
# b = [12]
# print(a < b)

# операции чисел (+, -, /, *, %(остаток от деления), // (целочисленное деление), ** (возведение в степень)
# a = 10 // 3
# print(a)

# мы можем через + объеденять списки, кортежи, и строки(конкатенация)
# a = [1, 2]
# b = [3, 4] + a
# print(b)

# ДЗ посмотреть все операнды у сетов(множеств) и в добавок разобрать что такое методы у типов данных (хотя бы у списка)


