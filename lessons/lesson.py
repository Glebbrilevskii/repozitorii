# - это комментарии, это строка кода обрабатываться не будет


#переменные
number = 1
number_2 = 2


#знак "=" это знак присваивания значения в переменную
# print(number, number_2, 3)


#snake case - это способ названия переменных
# (все переменные начинаются с маленькой буквы и слова отделяются "_"
# этим способом мы называем переменные и питоновские файлы)
# name = input("введите ваше имя: ")
# print(name)


#типы данных
#2 классификации изменяемые и неизменяемые (mutable 3 типов переменных (изменяемые),
# imutable 6 типов переменных(неизменяемые))

#imutable (str - строка, int - число, float - число с плавующей точкой,
# bool - логический тип переменных, tuple - кортеж, frozenset - неизменяемое множесство)

#mutable (list - список, dict - словарь, set - множество)

#str - это строка которая может определяться двойными, ординарными и тройными ковычками(...)
string_1 = "слово"
string_2 = 'слово'

#int - число
number_1 = 10000

#float - число с плавующей точкой
num_1 = 1.2

#bool - логический(True or False)
first_logic = True
second_logic = False

#tuple - кортеж(неизменяемое хранилище многих объектов, определяется через - "()")
example_of_tuple = (1.2, "слово", 1, True, first_logic, num_1)
print(example_of_tuple)

#list - список (изменяемое хранилище многих объектов, определяется через - "[]")
example_of_list = [1.3, 1, "j", "False"]
print(example_of_list)

#dict - словарь который хранит значенния в паре (ключ: значение),
# определяется через "{key:value, key:value}, ключом в словаре могут быть только неизменяемые объекты,
# значения - любые"
example_of_dict = {"key": 5, 10:"Глеб"}
print(example_of_dict)

#set - это множество хранит только уникальные значения в случайном порядке(хранит только неизменяемые типы данных),
# определяется через - "{}"
example_of_set = {True, 1, "stge", "ghg"}
print(example_of_set)

#Куда пропала '1'? - ДЗ
#Ответ - множества могут содержать только уникальные элементы.
# Булевы значения являются подклассом целых чисел, и на уровне интепретатора True = 1, a False = 0

# индекс это порядковый номер каждого элемента в массиве, начинается слева на право от нуля до последнего элемента,
# либо с обратной стороны с -1 шагом
# пример а = (1, 3, 5, 7, 9) что бы достать цифру 5, нужно прописать
# а = (1, 3, 5, 7, 9)
# b = a[2]
# print(b)
# так же можно писать с конца списка, к примеру что бы достать цифру 7 пишем
# а[-2] в таком случае нумерация идет не с 0, а с конца

#достать объекты со списка и кортежа можно по индексу
# a_of_list = (1, 2, 3)
# b = a_of_list[0]
# print(b)

# что бы достать слово из словаря используем ключ.
# my_dict = {"key": 1, "key_2": 2}
# a = my_dict["key_2"]
# print(a)

# что бы добавить новый объект в список используем метод append(), пример
# apartments = [1, 2, 3, 4, 5]
# apartments.append(6)
# print(apartments)

#чтобы добавить новый объект в словарь можно использовать метод update(), пример
# year = {"key": 10, "key1": 20}
# new_key = {"key3": 30}
# year.update(new_key)
# print(year)

