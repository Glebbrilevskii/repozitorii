# методы у списка
#1. append(x): Добавляет элемент x в конец списка.
# my_list = [1, 2, 3]
# my_list.append(4)
# # Результат: [1, 2, 3, 4]
#2. extend(iterable): Расширяет список, добавляя элементы из итерируемого объекта iterable.
#list1 = [1, 2, 3]
# list2 = [4, 5, 6]
# list1.extend(list2)
## Результат: [1, 2, 3, 4, 5, 6]
# 3. insert(i, x): Вставляет элемент x в позицию с индексом i.
# my_list = [1, 2, 3]
# my_list.insert(1, 4)
## Результат: [1, 4, 2, 3]
# 4. remove(x): Удаляет первое вхождение элемента x.
# my_list = [1, 2, 3, 2]
# my_list.remove(2)
## Результат: [1, 3, 2]
# 5. `pop([i])`: Удаляет элемент с индексом i (или последний элемент, если индекс не указан) и возвращает его.
# my_list = [1, 2, 3]
# popped_element = my_list.pop(1)
## Результат: my_list = [1, 3], popped_element = 2
#6. `index(x[, start[, end]])`: Возвращает индекс первого вхождения элемента x в указанном диапазоне.
# my_list = [1, 2, 3, 2]
# index_of_2 = my_list.index(2)
# print(index_of_2)
## Результат: index_of_2 = 1
# 7. `count(x)`: Возвращает количество вхождений элемента x в списке.
# my_list = [1, 2, 3, 2]
# count_of_2 = my_list.count(2)
## Результат: count_of_2 = 2
# 8. `reverse()`: Изменяет порядок элементов в списке на обратный.
# my_list = [1, 2, 3]
# my_list.reverse()
## Результат: [3, 2, 1]
# 9. `sort(key=None, reverse=False)`: Сортирует элементы списка (по умолчанию по возрастанию).
# my_list = [3, 1, 4, 1, 5, 9, 2]
# my_list.sort()
## Результат: [1, 1, 2, 3, 4, 5, 9]
# 10. `clear()`: Удаляет все элементы из списка.
# my_list = [1, 2, 3]
# my_list.clear()
## Результат: []
# 11. `copy()`: Создает копию списка.
# my_list = [1, 2, 3]
# copy_of_list = my_list.copy()
## Результат: copy_of_list = [1, 2, 3]